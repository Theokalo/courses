
Άσκηση Α2.1: Μάντεψε τη λέξη!
==============================

Χρησιμοποιήστε όσα μάθατε για να προγραμματίσετε το γνωστό παιχνίδι ("κρεμάλα") σε απλό κείμενο για την κονσόλα.


Τι πρέπει να υλοποιήσετε
----------------------------

* Γενικά

  * Μπορείτε να χρησιμοποιήσετε λέξεις στα αγγλικά για να αποφύγετε τα προβλήματα κωδικοποίησης χαρακτήρων. Εάν επιμένετε όμως, μπορείτε να χρησιμοποιήσετε ελληνικά, αφού πρώτα φροντίσετε για την αποθήκευση του αρχείου σας κατά iso-8859-7 και την ρύθμιση της κονσόλας σας στο ίδιο σετ χαρακτήρων.
  
  * Πρέπει να χρησιμοποιήσετε **μόνο** μεταβλητές τύπου int, char, bool ή string. Όσοι έχετε προηγούμενη εμπειρία με τη C/C++ αποφύγετε τον πειρασμό να χρησιμοποιήσετε πίνακες (arrays)!
  
  * Η μυστική λέξη θα δηλώνεται ρητά στην αρχή του προγράμματος (για απλότητα - αργότερα μπορεί να αλλάξει αυτό). Το ίδιο και οι προσπάθειες που απομένουν στον παίκτη. Π.χ.:
  
    .. code-block:: c++
  
       string secretword = "supercalifragilisticexpialidocious";
       int tries = 3;
     
* Στη συνέχεια:
  
  1. Θα αρχικοποιείτε όποιες άλλες μεταβλητές θέλετε (την κατάσταση του παιχνιδιού, δηλαδή).
  
    * Για το ποια γράμματα έχουν αποκαλυφθεί και ποια όχι μπορείτε να έχετε ένα string με '0' και '1' (ή οποιονδήποτε συνδυασμό 2 χαρακτήρων), με τον έναν χαρακτήρα να αντιστοιχεί στα κρυφά και τον άλλον στα φανερά γράμματα.
    
  2. Θα αποκαλύπτετε το πρώτο και το τελευταίο γράμμα, καθώς και όποιο άλλο γράμμα είναι όμοιο με αυτά. 
  3. Θα τυπώνετε τη λέξη με _ στα γράμματα που δεν έχουν αποκαλυφθεί.
  4. Θα τυπώνετε τις σωστές και τις λάθος επιλογές του χρήστη, καθώς και τις προσπάθειες που απομένουν.
  5. Θα ζητάτε από το χρήστη έναν χαρακτήρα (με ανίχνευση σφάλματος).
  6. Θα ελέγχετε αν ο χαρακτήρας έχει ήδη δοθεί:
    
    7. Αν ναι, θα ζητάτε ξανά νέο χαρακτήρα.
    8. Αν όχι, θα ελέγχετε αν ο χαρακτήρας υπάρχει μέσα στη λέξη.
    
      9. Αν ναι, θα αποκαλύπτετε το γράμμα (σε όσες θέσεις υπάρχει στη λέξη). Ελέγξτε αν ο χρήστης κέρδισε.
      10. Αν όχι, θα μειώνετε τις προσπάθειες που απομένουν. Ελέγξτε αν ο χρήστης έχασε.
      11. Επαναλαμβάνετε από το βήμα 4.
   
Εργαλεία
----------

* το μήκος ενός string το παίρνουμε με τη μέθοδο **length()**

  .. code-block:: c++
  
     int wordl = word.length();
  
* η προσπέλαση του στοιχείου i μπορεί να γίνει με το [] 

  .. code-block:: c++
  
     cout << word[i];
   
* η μέθοδος find() μπορεί (μεταξύ άλλων) να βρει τη θέση ενός χαρακτήρα μέσα στο string (http://www.cplusplus.com/reference/string/string/find/)

  .. code-block:: c++
  
     if (word.find('x')!=string::npos)
     {
         cout << "found!";
     } 

  * **string::npos** είναι η σταθερά που επιστρέφεται όταν ο χαρακτήρας δεν υπάρχει στο string

* η μέθοδος substr() επιστρέφει ένα μέρος του string ως νέο string (http://www.cplusplus.com/reference/string/string/substr/)

  .. literalinclude:: wordguess.cpp
     :language: c++
     :encoding: iso-8859-7
     :lines: 1-20

  .. literalinclude:: wordguess.cpp
     :language: c++
     :encoding: iso-8859-7
     :lines: 21-63

  .. literalinclude:: wordguess.cpp
     :language: c++
     :encoding: iso-8859-7
     :lines: 64-


